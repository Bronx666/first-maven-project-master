<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.bronx.daoTest.FilmRepositoryTest" time="2.764" tests="5" errors="4" skipped="0" failures="1">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1251"/>
    <property name="java.class.path" value="C:\Files\Work\Maven\first-maven-project-master\target\test-classes;C:\Files\Work\Maven\first-maven-project-master\target\classes;C:\Users\Bronx\.m2\repository\org\springframework\spring-context\5.3.19\spring-context-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-aop\5.3.19\spring-aop-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-beans\5.3.19\spring-beans-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-expression\5.3.19\spring-expression-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-core\5.3.19\spring-core-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-jcl\5.3.19\spring-jcl-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\hibernate\hibernate-core\5.6.8.Final\hibernate-core-5.6.8.Final.jar;C:\Users\Bronx\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Bronx\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Bronx\.m2\repository\net\bytebuddy\byte-buddy\1.12.9\byte-buddy-1.12.9.jar;C:\Users\Bronx\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Bronx\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Bronx\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Bronx\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Bronx\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Bronx\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Bronx\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Bronx\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Bronx\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Bronx\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Bronx\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Bronx\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Bronx\.m2\repository\org\postgresql\postgresql\42.3.3\postgresql-42.3.3.jar;C:\Users\Bronx\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Bronx\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Bronx\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\Bronx\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Bronx\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\Bronx\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Bronx\.m2\repository\org\testcontainers\postgresql\1.17.1\postgresql-1.17.1.jar;C:\Users\Bronx\.m2\repository\org\testcontainers\jdbc\1.17.1\jdbc-1.17.1.jar;C:\Users\Bronx\.m2\repository\org\testcontainers\database-commons\1.17.1\database-commons-1.17.1.jar;C:\Users\Bronx\.m2\repository\org\testcontainers\testcontainers\1.17.1\testcontainers-1.17.1.jar;C:\Users\Bronx\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Bronx\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Bronx\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\Bronx\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\Bronx\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\Bronx\.m2\repository\com\github\docker-java\docker-java-api\3.2.13\docker-java-api-3.2.13.jar;C:\Users\Bronx\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.3\jackson-annotations-2.10.3.jar;C:\Users\Bronx\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.2.13\docker-java-transport-zerodep-3.2.13.jar;C:\Users\Bronx\.m2\repository\com\github\docker-java\docker-java-transport\3.2.13\docker-java-transport-3.2.13.jar;C:\Users\Bronx\.m2\repository\net\java\dev\jna\jna\5.8.0\jna-5.8.0.jar;C:\Users\Bronx\.m2\repository\com\h2database\h2\2.1.212\h2-2.1.212.jar;C:\Users\Bronx\.m2\repository\com\querydsl\querydsl-apt\5.0.0\querydsl-apt-5.0.0.jar;C:\Users\Bronx\.m2\repository\com\querydsl\querydsl-codegen\5.0.0\querydsl-codegen-5.0.0.jar;C:\Users\Bronx\.m2\repository\com\querydsl\codegen-utils\5.0.0\codegen-utils-5.0.0.jar;C:\Users\Bronx\.m2\repository\org\eclipse\jdt\ecj\3.26.0\ecj-3.26.0.jar;C:\Users\Bronx\.m2\repository\io\github\classgraph\classgraph\4.8.108\classgraph-4.8.108.jar;C:\Users\Bronx\.m2\repository\com\querydsl\querydsl-jpa\5.0.0\querydsl-jpa-5.0.0.jar;C:\Users\Bronx\.m2\repository\com\querydsl\querydsl-core\5.0.0\querydsl-core-5.0.0.jar;C:\Users\Bronx\.m2\repository\com\mysema\commons\mysema-commons-lang\0.2.4\mysema-commons-lang-0.2.4.jar;C:\Users\Bronx\.m2\repository\org\slf4j\slf4j-simple\1.7.32\slf4j-simple-1.7.32.jar;C:\Users\Bronx\.m2\repository\org\slf4j\slf4j-api\1.7.32\slf4j-api-1.7.32.jar;C:\Users\Bronx\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Bronx\.m2\repository\org\assertj\assertj-core\3.22.0\assertj-core-3.22.0.jar;C:\Users\Bronx\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Bronx\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Warsaw"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="RU"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-17.0.2\bin"/>
    <property name="sun.java.command" value="C:\Users\Bronx\AppData\Local\Temp\surefire10926452127913366864\surefirebooter47549069212897137.jar C:\Users\Bronx\AppData\Local\Temp\surefire10926452127913366864 2022-05-14T11-43-47_291-jvmRun1 surefire18058002345943643264tmp surefire_015462075728819187113tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="C:\Files\Work\Maven\first-maven-project-master\target\test-classes;C:\Files\Work\Maven\first-maven-project-master\target\classes;C:\Users\Bronx\.m2\repository\org\springframework\spring-context\5.3.19\spring-context-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-aop\5.3.19\spring-aop-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-beans\5.3.19\spring-beans-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-expression\5.3.19\spring-expression-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-core\5.3.19\spring-core-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\springframework\spring-jcl\5.3.19\spring-jcl-5.3.19.jar;C:\Users\Bronx\.m2\repository\org\hibernate\hibernate-core\5.6.8.Final\hibernate-core-5.6.8.Final.jar;C:\Users\Bronx\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\Bronx\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Bronx\.m2\repository\net\bytebuddy\byte-buddy\1.12.9\byte-buddy-1.12.9.jar;C:\Users\Bronx\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Bronx\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Bronx\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\Bronx\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Bronx\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Bronx\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\Bronx\.m2\repository\javax\xml\bind\jaxb-api\2.3.1\jaxb-api-2.3.1.jar;C:\Users\Bronx\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\Bronx\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\Bronx\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\Bronx\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\Bronx\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\Bronx\.m2\repository\org\postgresql\postgresql\42.3.3\postgresql-42.3.3.jar;C:\Users\Bronx\.m2\repository\org\checkerframework\checker-qual\3.5.0\checker-qual-3.5.0.jar;C:\Users\Bronx\.m2\repository\org\projectlombok\lombok\1.18.22\lombok-1.18.22.jar;C:\Users\Bronx\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\Bronx\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Bronx\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\Bronx\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Bronx\.m2\repository\org\testcontainers\postgresql\1.17.1\postgresql-1.17.1.jar;C:\Users\Bronx\.m2\repository\org\testcontainers\jdbc\1.17.1\jdbc-1.17.1.jar;C:\Users\Bronx\.m2\repository\org\testcontainers\database-commons\1.17.1\database-commons-1.17.1.jar;C:\Users\Bronx\.m2\repository\org\testcontainers\testcontainers\1.17.1\testcontainers-1.17.1.jar;C:\Users\Bronx\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\Bronx\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\Bronx\.m2\repository\org\apache\commons\commons-compress\1.21\commons-compress-1.21.jar;C:\Users\Bronx\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\Bronx\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\Bronx\.m2\repository\com\github\docker-java\docker-java-api\3.2.13\docker-java-api-3.2.13.jar;C:\Users\Bronx\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.10.3\jackson-annotations-2.10.3.jar;C:\Users\Bronx\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.2.13\docker-java-transport-zerodep-3.2.13.jar;C:\Users\Bronx\.m2\repository\com\github\docker-java\docker-java-transport\3.2.13\docker-java-transport-3.2.13.jar;C:\Users\Bronx\.m2\repository\net\java\dev\jna\jna\5.8.0\jna-5.8.0.jar;C:\Users\Bronx\.m2\repository\com\h2database\h2\2.1.212\h2-2.1.212.jar;C:\Users\Bronx\.m2\repository\com\querydsl\querydsl-apt\5.0.0\querydsl-apt-5.0.0.jar;C:\Users\Bronx\.m2\repository\com\querydsl\querydsl-codegen\5.0.0\querydsl-codegen-5.0.0.jar;C:\Users\Bronx\.m2\repository\com\querydsl\codegen-utils\5.0.0\codegen-utils-5.0.0.jar;C:\Users\Bronx\.m2\repository\org\eclipse\jdt\ecj\3.26.0\ecj-3.26.0.jar;C:\Users\Bronx\.m2\repository\io\github\classgraph\classgraph\4.8.108\classgraph-4.8.108.jar;C:\Users\Bronx\.m2\repository\com\querydsl\querydsl-jpa\5.0.0\querydsl-jpa-5.0.0.jar;C:\Users\Bronx\.m2\repository\com\querydsl\querydsl-core\5.0.0\querydsl-core-5.0.0.jar;C:\Users\Bronx\.m2\repository\com\mysema\commons\mysema-commons-lang\0.2.4\mysema-commons-lang-0.2.4.jar;C:\Users\Bronx\.m2\repository\org\slf4j\slf4j-simple\1.7.32\slf4j-simple-1.7.32.jar;C:\Users\Bronx\.m2\repository\org\slf4j\slf4j-api\1.7.32\slf4j-api-1.7.32.jar;C:\Users\Bronx\.m2\repository\javax\annotation\javax.annotation-api\1.3.2\javax.annotation-api-1.3.2.jar;C:\Users\Bronx\.m2\repository\org\assertj\assertj-core\3.22.0\assertj-core-3.22.0.jar;C:\Users\Bronx\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Bronx\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Bronx"/>
    <property name="user.language" value="ru"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2022-01-18"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-17.0.2"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="C:\Files\Work\Maven\first-maven-project-master"/>
    <property name="java.vm.compressedOopsMode" value="32-bit"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\Bronx\AppData\Local\Temp\surefire10926452127913366864\surefirebooter47549069212897137.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.2+8-LTS-86"/>
    <property name="user.name" value="Bronx"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="Cp1251"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Bronx\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Bronx\AppData\Local\Temp\"/>
    <property name="idea.version" value="2021.1.3"/>
    <property name="java.version" value="17.0.2"/>
    <property name="user.dir" value="C:\Files\Work\Maven\first-maven-project-master"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1251"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-17.0.2\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.8.5\bin;;C:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;C:\Users\Bronx\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\JetBrains\IntelliJ IDEA 2021.1.1\bin;;C:\Program Files\JetBrains\PyCharm 2021.3.3\bin;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="17.0.2+8-LTS-86"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
  </properties>
  <testcase name="findAll" classname="com.bronx.daoTest.FilmRepositoryTest" time="0.197">
    <failure type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: 

Expected size: 3 but was: 9 in:
[Film(id=1, name=Morbius, description=Film about vampires, ticketCost=20.0, duration=134, films=[EventFilm(id=2, date=2022-06-25T13:24, freeSeats=35)]),
    Film(id=2, name=Viking, description=Film about vikings, ticketCost=15.0, duration=124, films=[EventFilm(id=3, date=2022-06-25T13:24, freeSeats=50)]),
    Film(id=3, name=Stranger, description=Film about stranger, ticketCost=25.0, duration=144, films=[EventFilm(id=1, date=2022-06-25T13:24, freeSeats=40)]),
    Film(id=4, name=Morbius, description=Film about vampires, ticketCost=20.0, duration=134, films=[EventFilm(id=5, date=2022-06-25T13:24, freeSeats=35)]),
    Film(id=5, name=Viking, description=Film about vikings, ticketCost=15.0, duration=124, films=[EventFilm(id=6, date=2022-06-25T13:24, freeSeats=50)]),
    Film(id=6, name=Stranger, description=Film about stranger, ticketCost=25.0, duration=144, films=[EventFilm(id=4, date=2022-06-25T13:24, freeSeats=40)]),
    Film(id=7, name=Morbius, description=Film about vampires, ticketCost=20.0, duration=134, films=[EventFilm(id=9, date=2022-06-25T13:24, freeSeats=35)]),
    Film(id=8, name=Viking, description=Film about vikings, ticketCost=15.0, duration=124, films=[EventFilm(id=10, date=2022-06-25T13:24, freeSeats=50)]),
    Film(id=9, name=Stranger, description=Film about stranger, ticketCost=25.0, duration=144, films=[EventFilm(id=8, date=2022-06-25T13:24, freeSeats=40)])]
	at com.bronx.daoTest.FilmRepositoryTest.findAll(FilmRepositoryTest.java:48)
]]></failure>
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        public.users
        (id, password, role, username) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.users
        (id, password, role, username) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        public.users
        (id, password, role, username) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        cinema
        (id, description, name) 
    values
        (default, ?, ?)
Hibernate: 
    insert 
    into
        cinema
        (id, description, name) 
    values
        (default, ?, ?)
Hibernate: 
    insert 
    into
        film
        (id, description, duration, name, ticket_cost) 
    values
        (default, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        film
        (id, description, duration, name, ticket_cost) 
    values
        (default, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        film
        (id, description, duration, name, ticket_cost) 
    values
        (default, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        hall
        (id, amount_of_seats, cinema_id, description, name) 
    values
        (default, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        hall
        (id, amount_of_seats, cinema_id, description, name) 
    values
        (default, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        hall
        (id, amount_of_seats, cinema_id, description, name) 
    values
        (default, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        event_film
        (id, date, film_id, free_seats, hall_id) 
    values
        (default, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        event_film
        (id, date, film_id, free_seats, hall_id) 
    values
        (default, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        event_film
        (id, date, film_id, free_seats, hall_id) 
    values
        (default, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        ticket
        (id, event_film_id, ticket_number, user_id) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        ticket
        (id, event_film_id, ticket_number, user_id) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        ticket
        (id, event_film_id, ticket_number, user_id) 
    values
        (default, ?, ?, ?)
Hibernate: 
    select
        film0_.id as id1_3_,
        film0_.description as descript2_3_,
        film0_.duration as duration3_3_,
        film0_.name as name4_3_,
        film0_.ticket_cost as ticket_c5_3_ 
    from
        film film0_
Hibernate: 
    select
        films0_.film_id as film_id4_2_0_,
        films0_.id as id1_2_0_,
        films0_.id as id1_2_1_,
        films0_.date as date2_2_1_,
        films0_.film_id as film_id4_2_1_,
        films0_.free_seats as free_sea3_2_1_,
        films0_.hall_id as hall_id5_2_1_,
        hall1_.id as id1_4_2_,
        hall1_.amount_of_seats as amount_o2_4_2_,
        hall1_.cinema_id as cinema_i5_4_2_,
        hall1_.description as descript3_4_2_,
        hall1_.name as name4_4_2_,
        cinema2_.id as id1_1_3_,
        cinema2_.description as descript2_1_3_,
        cinema2_.name as name3_1_3_ 
    from
        event_film films0_ 
    left outer join
        hall hall1_ 
            on films0_.hall_id=hall1_.id 
    left outer join
        cinema cinema2_ 
            on hall1_.cinema_id=cinema2_.id 
    where
        films0_.film_id=?
Hibernate: 
    select
        films0_.film_id as film_id4_2_0_,
        films0_.id as id1_2_0_,
        films0_.id as id1_2_1_,
        films0_.date as date2_2_1_,
        films0_.film_id as film_id4_2_1_,
        films0_.free_seats as free_sea3_2_1_,
        films0_.hall_id as hall_id5_2_1_,
        hall1_.id as id1_4_2_,
        hall1_.amount_of_seats as amount_o2_4_2_,
        hall1_.cinema_id as cinema_i5_4_2_,
        hall1_.description as descript3_4_2_,
        hall1_.name as name4_4_2_,
        cinema2_.id as id1_1_3_,
        cinema2_.description as descript2_1_3_,
        cinema2_.name as name3_1_3_ 
    from
        event_film films0_ 
    left outer join
        hall hall1_ 
            on films0_.hall_id=hall1_.id 
    left outer join
        cinema cinema2_ 
            on hall1_.cinema_id=cinema2_.id 
    where
        films0_.film_id=?
Hibernate: 
    select
        films0_.film_id as film_id4_2_0_,
        films0_.id as id1_2_0_,
        films0_.id as id1_2_1_,
        films0_.date as date2_2_1_,
        films0_.film_id as film_id4_2_1_,
        films0_.free_seats as free_sea3_2_1_,
        films0_.hall_id as hall_id5_2_1_,
        hall1_.id as id1_4_2_,
        hall1_.amount_of_seats as amount_o2_4_2_,
        hall1_.cinema_id as cinema_i5_4_2_,
        hall1_.description as descript3_4_2_,
        hall1_.name as name4_4_2_,
        cinema2_.id as id1_1_3_,
        cinema2_.description as descript2_1_3_,
        cinema2_.name as name3_1_3_ 
    from
        event_film films0_ 
    left outer join
        hall hall1_ 
            on films0_.hall_id=hall1_.id 
    left outer join
        cinema cinema2_ 
            on hall1_.cinema_id=cinema2_.id 
    where
        films0_.film_id=?
Hibernate: 
    select
        films0_.film_id as film_id4_2_0_,
        films0_.id as id1_2_0_,
        films0_.id as id1_2_1_,
        films0_.date as date2_2_1_,
        films0_.film_id as film_id4_2_1_,
        films0_.free_seats as free_sea3_2_1_,
        films0_.hall_id as hall_id5_2_1_,
        hall1_.id as id1_4_2_,
        hall1_.amount_of_seats as amount_o2_4_2_,
        hall1_.cinema_id as cinema_i5_4_2_,
        hall1_.description as descript3_4_2_,
        hall1_.name as name4_4_2_,
        cinema2_.id as id1_1_3_,
        cinema2_.description as descript2_1_3_,
        cinema2_.name as name3_1_3_ 
    from
        event_film films0_ 
    left outer join
        hall hall1_ 
            on films0_.hall_id=hall1_.id 
    left outer join
        cinema cinema2_ 
            on hall1_.cinema_id=cinema2_.id 
    where
        films0_.film_id=?
Hibernate: 
    select
        films0_.film_id as film_id4_2_0_,
        films0_.id as id1_2_0_,
        films0_.id as id1_2_1_,
        films0_.date as date2_2_1_,
        films0_.film_id as film_id4_2_1_,
        films0_.free_seats as free_sea3_2_1_,
        films0_.hall_id as hall_id5_2_1_,
        hall1_.id as id1_4_2_,
        hall1_.amount_of_seats as amount_o2_4_2_,
        hall1_.cinema_id as cinema_i5_4_2_,
        hall1_.description as descript3_4_2_,
        hall1_.name as name4_4_2_,
        cinema2_.id as id1_1_3_,
        cinema2_.description as descript2_1_3_,
        cinema2_.name as name3_1_3_ 
    from
        event_film films0_ 
    left outer join
        hall hall1_ 
            on films0_.hall_id=hall1_.id 
    left outer join
        cinema cinema2_ 
            on hall1_.cinema_id=cinema2_.id 
    where
        films0_.film_id=?
Hibernate: 
    select
        films0_.film_id as film_id4_2_0_,
        films0_.id as id1_2_0_,
        films0_.id as id1_2_1_,
        films0_.date as date2_2_1_,
        films0_.film_id as film_id4_2_1_,
        films0_.free_seats as free_sea3_2_1_,
        films0_.hall_id as hall_id5_2_1_,
        hall1_.id as id1_4_2_,
        hall1_.amount_of_seats as amount_o2_4_2_,
        hall1_.cinema_id as cinema_i5_4_2_,
        hall1_.description as descript3_4_2_,
        hall1_.name as name4_4_2_,
        cinema2_.id as id1_1_3_,
        cinema2_.description as descript2_1_3_,
        cinema2_.name as name3_1_3_ 
    from
        event_film films0_ 
    left outer join
        hall hall1_ 
            on films0_.hall_id=hall1_.id 
    left outer join
        cinema cinema2_ 
            on hall1_.cinema_id=cinema2_.id 
    where
        films0_.film_id=?
Hibernate: 
    select
        films0_.film_id as film_id4_2_0_,
        films0_.id as id1_2_0_,
        films0_.id as id1_2_1_,
        films0_.date as date2_2_1_,
        films0_.film_id as film_id4_2_1_,
        films0_.free_seats as free_sea3_2_1_,
        films0_.hall_id as hall_id5_2_1_,
        hall1_.id as id1_4_2_,
        hall1_.amount_of_seats as amount_o2_4_2_,
        hall1_.cinema_id as cinema_i5_4_2_,
        hall1_.description as descript3_4_2_,
        hall1_.name as name4_4_2_,
        cinema2_.id as id1_1_3_,
        cinema2_.description as descript2_1_3_,
        cinema2_.name as name3_1_3_ 
    from
        event_film films0_ 
    left outer join
        hall hall1_ 
            on films0_.hall_id=hall1_.id 
    left outer join
        cinema cinema2_ 
            on hall1_.cinema_id=cinema2_.id 
    where
        films0_.film_id=?
Hibernate: 
    select
        films0_.film_id as film_id4_2_0_,
        films0_.id as id1_2_0_,
        films0_.id as id1_2_1_,
        films0_.date as date2_2_1_,
        films0_.film_id as film_id4_2_1_,
        films0_.free_seats as free_sea3_2_1_,
        films0_.hall_id as hall_id5_2_1_,
        hall1_.id as id1_4_2_,
        hall1_.amount_of_seats as amount_o2_4_2_,
        hall1_.cinema_id as cinema_i5_4_2_,
        hall1_.description as descript3_4_2_,
        hall1_.name as name4_4_2_,
        cinema2_.id as id1_1_3_,
        cinema2_.description as descript2_1_3_,
        cinema2_.name as name3_1_3_ 
    from
        event_film films0_ 
    left outer join
        hall hall1_ 
            on films0_.hall_id=hall1_.id 
    left outer join
        cinema cinema2_ 
            on hall1_.cinema_id=cinema2_.id 
    where
        films0_.film_id=?
Hibernate: 
    select
        films0_.film_id as film_id4_2_0_,
        films0_.id as id1_2_0_,
        films0_.id as id1_2_1_,
        films0_.date as date2_2_1_,
        films0_.film_id as film_id4_2_1_,
        films0_.free_seats as free_sea3_2_1_,
        films0_.hall_id as hall_id5_2_1_,
        hall1_.id as id1_4_2_,
        hall1_.amount_of_seats as amount_o2_4_2_,
        hall1_.cinema_id as cinema_i5_4_2_,
        hall1_.description as descript3_4_2_,
        hall1_.name as name4_4_2_,
        cinema2_.id as id1_1_3_,
        cinema2_.description as descript2_1_3_,
        cinema2_.name as name3_1_3_ 
    from
        event_film films0_ 
    left outer join
        hall hall1_ 
            on films0_.hall_id=hall1_.id 
    left outer join
        cinema cinema2_ 
            on hall1_.cinema_id=cinema2_.id 
    where
        films0_.film_id=?
]]></system-out>
    <system-err><![CDATA[мая 14, 2022 11:44:27 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
WARN: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
мая 14, 2022 11:44:27 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:mem:bronx_test_db]
мая 14, 2022 11:44:27 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001001: Connection properties: {password=****, user=}
мая 14, 2022 11:44:27 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001003: Autocommit mode: false
мая 14, 2022 11:44:27 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections <init>
INFO: HHH000115: Hibernate connection pool size: 20 (min=1)
мая 14, 2022 11:44:27 AM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
мая 14, 2022 11:44:28 AM org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4dfb5cae] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
мая 14, 2022 11:44:28 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
WARN: HHH10001002: Using Hibernate built-in connection pool (not for production use!)
мая 14, 2022 11:44:28 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:mem:bronx_test_db]
мая 14, 2022 11:44:28 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001001: Connection properties: {password=****, user=}
мая 14, 2022 11:44:28 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001003: Autocommit mode: false
мая 14, 2022 11:44:28 AM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections <init>
INFO: HHH000115: Hibernate connection pool size: 20 (min=1)
мая 14, 2022 11:44:28 AM org.hibernate.dialect.Dialect <init>
INFO: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
мая 14, 2022 11:44:29 AM org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1ce0a7bc] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
]]></system-err>
  </testcase>
  <testcase name="checkUpdateFilmName" classname="com.bronx.daoTest.FilmRepositoryTest" time="0">
    <error type="java.lang.reflect.UndeclaredThrowableException"><![CDATA[java.lang.reflect.UndeclaredThrowableException
	at com.bronx.daoTest.FilmRepositoryTest.checkUpdateFilmName(FilmRepositoryTest.java:92)
Caused by: java.lang.reflect.InvocationTargetException
	at com.bronx.daoTest.FilmRepositoryTest.checkUpdateFilmName(FilmRepositoryTest.java:92)
Caused by: java.lang.IllegalStateException: Transaction already active
	at com.bronx.daoTest.FilmRepositoryTest.checkUpdateFilmName(FilmRepositoryTest.java:92)
]]></error>
  </testcase>
  <testcase name="findFilmById" classname="com.bronx.daoTest.FilmRepositoryTest" time="0.013">
    <error type="java.lang.reflect.UndeclaredThrowableException"><![CDATA[java.lang.reflect.UndeclaredThrowableException
	at com.bronx.daoTest.FilmRepositoryTest.findFilmById(FilmRepositoryTest.java:59)
Caused by: java.lang.reflect.InvocationTargetException
	at com.bronx.daoTest.FilmRepositoryTest.findFilmById(FilmRepositoryTest.java:59)
Caused by: java.lang.IllegalStateException: Transaction already active
	at com.bronx.daoTest.FilmRepositoryTest.findFilmById(FilmRepositoryTest.java:59)
]]></error>
  </testcase>
  <testcase name="deleteFilm" classname="com.bronx.daoTest.FilmRepositoryTest" time="0.006">
    <error type="java.lang.reflect.UndeclaredThrowableException"><![CDATA[java.lang.reflect.UndeclaredThrowableException
	at com.bronx.daoTest.FilmRepositoryTest.deleteFilm(FilmRepositoryTest.java:82)
Caused by: java.lang.reflect.InvocationTargetException
	at com.bronx.daoTest.FilmRepositoryTest.deleteFilm(FilmRepositoryTest.java:82)
Caused by: java.lang.IllegalStateException: Transaction already active
	at com.bronx.daoTest.FilmRepositoryTest.deleteFilm(FilmRepositoryTest.java:82)
]]></error>
  </testcase>
  <testcase name="saveFilmAndReturnHimWithId" classname="com.bronx.daoTest.FilmRepositoryTest" time="0.004">
    <error type="java.lang.reflect.UndeclaredThrowableException"><![CDATA[java.lang.reflect.UndeclaredThrowableException
	at com.bronx.daoTest.FilmRepositoryTest.saveFilmAndReturnHimWithId(FilmRepositoryTest.java:70)
Caused by: java.lang.reflect.InvocationTargetException
	at com.bronx.daoTest.FilmRepositoryTest.saveFilmAndReturnHimWithId(FilmRepositoryTest.java:70)
Caused by: java.lang.IllegalStateException: Transaction already active
	at com.bronx.daoTest.FilmRepositoryTest.saveFilmAndReturnHimWithId(FilmRepositoryTest.java:70)
]]></error>
  </testcase>
</testsuite>