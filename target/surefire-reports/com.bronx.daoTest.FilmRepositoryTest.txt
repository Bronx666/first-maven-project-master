-------------------------------------------------------------------------------
Test set: com.bronx.daoTest.FilmRepositoryTest
-------------------------------------------------------------------------------
Tests run: 5, Failures: 1, Errors: 4, Skipped: 0, Time elapsed: 2.764 s <<< FAILURE! - in com.bronx.daoTest.FilmRepositoryTest
com.bronx.daoTest.FilmRepositoryTest.findAll  Time elapsed: 0.197 s  <<< FAILURE!
java.lang.AssertionError: 

Expected size: 3 but was: 9 in:
[Film(id=1, name=Morbius, description=Film about vampires, ticketCost=20.0, duration=134, films=[EventFilm(id=2, date=2022-06-25T13:24, freeSeats=35)]),
    Film(id=2, name=Viking, description=Film about vikings, ticketCost=15.0, duration=124, films=[EventFilm(id=3, date=2022-06-25T13:24, freeSeats=50)]),
    Film(id=3, name=Stranger, description=Film about stranger, ticketCost=25.0, duration=144, films=[EventFilm(id=1, date=2022-06-25T13:24, freeSeats=40)]),
    Film(id=4, name=Morbius, description=Film about vampires, ticketCost=20.0, duration=134, films=[EventFilm(id=5, date=2022-06-25T13:24, freeSeats=35)]),
    Film(id=5, name=Viking, description=Film about vikings, ticketCost=15.0, duration=124, films=[EventFilm(id=6, date=2022-06-25T13:24, freeSeats=50)]),
    Film(id=6, name=Stranger, description=Film about stranger, ticketCost=25.0, duration=144, films=[EventFilm(id=4, date=2022-06-25T13:24, freeSeats=40)]),
    Film(id=7, name=Morbius, description=Film about vampires, ticketCost=20.0, duration=134, films=[EventFilm(id=9, date=2022-06-25T13:24, freeSeats=35)]),
    Film(id=8, name=Viking, description=Film about vikings, ticketCost=15.0, duration=124, films=[EventFilm(id=10, date=2022-06-25T13:24, freeSeats=50)]),
    Film(id=9, name=Stranger, description=Film about stranger, ticketCost=25.0, duration=144, films=[EventFilm(id=8, date=2022-06-25T13:24, freeSeats=40)])]
	at com.bronx.daoTest.FilmRepositoryTest.findAll(FilmRepositoryTest.java:48)

com.bronx.daoTest.FilmRepositoryTest.checkUpdateFilmName  Time elapsed: 0 s  <<< ERROR!
java.lang.reflect.UndeclaredThrowableException
	at com.bronx.daoTest.FilmRepositoryTest.checkUpdateFilmName(FilmRepositoryTest.java:92)
Caused by: java.lang.reflect.InvocationTargetException
	at com.bronx.daoTest.FilmRepositoryTest.checkUpdateFilmName(FilmRepositoryTest.java:92)
Caused by: java.lang.IllegalStateException: Transaction already active
	at com.bronx.daoTest.FilmRepositoryTest.checkUpdateFilmName(FilmRepositoryTest.java:92)

com.bronx.daoTest.FilmRepositoryTest.findFilmById  Time elapsed: 0.013 s  <<< ERROR!
java.lang.reflect.UndeclaredThrowableException
	at com.bronx.daoTest.FilmRepositoryTest.findFilmById(FilmRepositoryTest.java:59)
Caused by: java.lang.reflect.InvocationTargetException
	at com.bronx.daoTest.FilmRepositoryTest.findFilmById(FilmRepositoryTest.java:59)
Caused by: java.lang.IllegalStateException: Transaction already active
	at com.bronx.daoTest.FilmRepositoryTest.findFilmById(FilmRepositoryTest.java:59)

com.bronx.daoTest.FilmRepositoryTest.deleteFilm  Time elapsed: 0.006 s  <<< ERROR!
java.lang.reflect.UndeclaredThrowableException
	at com.bronx.daoTest.FilmRepositoryTest.deleteFilm(FilmRepositoryTest.java:82)
Caused by: java.lang.reflect.InvocationTargetException
	at com.bronx.daoTest.FilmRepositoryTest.deleteFilm(FilmRepositoryTest.java:82)
Caused by: java.lang.IllegalStateException: Transaction already active
	at com.bronx.daoTest.FilmRepositoryTest.deleteFilm(FilmRepositoryTest.java:82)

com.bronx.daoTest.FilmRepositoryTest.saveFilmAndReturnHimWithId  Time elapsed: 0.004 s  <<< ERROR!
java.lang.reflect.UndeclaredThrowableException
	at com.bronx.daoTest.FilmRepositoryTest.saveFilmAndReturnHimWithId(FilmRepositoryTest.java:70)
Caused by: java.lang.reflect.InvocationTargetException
	at com.bronx.daoTest.FilmRepositoryTest.saveFilmAndReturnHimWithId(FilmRepositoryTest.java:70)
Caused by: java.lang.IllegalStateException: Transaction already active
	at com.bronx.daoTest.FilmRepositoryTest.saveFilmAndReturnHimWithId(FilmRepositoryTest.java:70)

